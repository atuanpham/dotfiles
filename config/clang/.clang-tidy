---
Checks: >
  *,
  -fuchsia-*,
  -google-*,
  -zircon-*,
  -abseil-*,
  -modernize-use-trailing-return-type,
  -llvm-*,
  -llvmlibc-*,
  -android-*,
  -altera-*,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-named-parameter,
  -readability-braces-around-statements,
  -readability-function-cognitive-complexity,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-avoid-magic-numbers,
  -bugprone-easily-swappable-parameters,
  -misc-non-private-member-variables-in-classes,
  -hicpp-braces-around-statements

# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"

HeaderFilterRegex: '.*'

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase }
  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase }
  - { key: readability-identifier-naming.FunctionCase,           value: camelBack }
  - { key: readability-identifier-naming.VariableCase,           value: lower_case }
  - { key: readability-identifier-naming.ClassMemberCase,        value: lower_case }
  - { key: readability-identifier-naming.ClassMethodCase,        value: camelBack }
  - { key: readability-identifier-naming.ClassMemberSuffix,      value: _ }
  - { key: readability-identifier-naming.PrivateMemberSuffix,    value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,  value: _ }
  - { key: readability-identifier-naming.EnumConstantCase,       value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstexprVariableCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,     value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberConstantCase,     value: UPPER_CASE }
  - { key: readability-identifier-naming.StaticConstantCase,     value: UPPER_CASE }
  - { key: cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors, value: '1' }
  - { key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor, value: '1' }
  - { key: hicpp-special-member-functions.AllowSoleDefaultDtor, value: '1' }
  - { key: cppcoreguidelines-avoid-non-const-global-variables.IgnoreFileVars, value: '1' }
  - { key: cppcoreguidelines-avoid-do-while.IgnoreMacros, value: '1' }
